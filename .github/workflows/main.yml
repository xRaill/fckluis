name: CI

on: push

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Run yarn install
        run: yarn install

      - name: Build next.js
        run: yarn build

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: |
            ${{ github.workspace }}
            !${{ github.workspace }}/.node_modules
  deploy:
    runs-on: ubuntu-latest
    needs: [ build ]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      #- name: Connect to server
      #  uses: webfactory/ssh-agent@v0.4.1
      #  with:
      #    ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: snapshot

      - name: Push to server
        run: |
          git remote add production ${{ secrets.PROD_REPO }}
          git push production main
        # ssh-keyscan -t rsa ${{ secrets.PRODUCTION_HOST }} >> ~/.ssh/known_hosts
        # git clone ${{ secrets.PROD_REPO }} test
          # git remote add production ${{ secrets.PROD_REPO }}
          # git remote -v
